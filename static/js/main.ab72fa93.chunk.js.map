{"version":3,"sources":["components/HashGenerator/HashGenerator.module.css","Algorithms/SHA256.js","components/HashGenerator/HashGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Sha256","msg","utf8Encode","K","H","l","String","fromCharCode","length","N","Math","ceil","M","Array","i","j","charCodeAt","pow","floor","a","b","c","d","e","f","g","h","W","t","σ1","σ0","T1","Σ1","Ch","T2","Σ0","Maj","toHexStr","n","x","ROTR","y","z","s","toString","prototype","unescape","encodeURIComponent","this","utf8Decode","decodeURIComponent","escape","hashingFunction","values","sort","value","data","joinedString","console","log","joinData","hash","HashGenerator","props","useState","value1","setValue1","value2","setValue2","hashedValue","setHashedValue","className","styles","container","onSubmit","preventDefault","SHA256Generator","onReset","form","form__inputGroup","htmlFor","form__inputLabel","form__input","type","onChange","target","form__textarea","btns","btn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab72fa93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HashGenerator_container__3y9yg\",\"form\":\"HashGenerator_form__2YCyh\",\"form__inputGroup\":\"HashGenerator_form__inputGroup__1B3_U\",\"form__inputLabel\":\"HashGenerator_form__inputLabel__2M68s\",\"form__input\":\"HashGenerator_form__input__1-aFb\",\"form__textarea\":\"HashGenerator_form__textarea__n1y_f\",\"btns\":\"HashGenerator_btns__1JRSN\",\"btn\":\"HashGenerator_btn__2CfyY\"};","/*\n https://github.com/BaseMax/SHA256HashGeneratorJS\n Based on SHA-256 implementation in JavaScript / Chris Veness 2002-2014 / MIT Licence\n*/\n\nlet Sha256 = {};\nSha256.hash = function (msg) {\n  msg = msg.utf8Encode();\n  let K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n    0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n    0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n    0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n    0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n  ];\n  let H = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c,\n    0x1f83d9ab, 0x5be0cd19,\n  ];\n  msg += String.fromCharCode(0x80);\n  let l = msg.length / 4 + 2;\n  let N = Math.ceil(l / 16);\n  let M = new Array(N);\n  for (let i = 0; i < N; i++) {\n    M[i] = new Array(16);\n    for (let j = 0; j < 16; j++) {\n      M[i][j] =\n        (msg.charCodeAt(i * 64 + j * 4) << 24) |\n        (msg.charCodeAt(i * 64 + j * 4 + 1) << 16) |\n        (msg.charCodeAt(i * 64 + j * 4 + 2) << 8) |\n        msg.charCodeAt(i * 64 + j * 4 + 3);\n    }\n  }\n  M[N - 1][14] = ((msg.length - 1) * 8) / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = ((msg.length - 1) * 8) & 0xffffffff;\n  let W = new Array(64);\n  let a, b, c, d, e, f, g, h;\n  for (let i = 0; i < N; i++) {\n    for (let t = 0; t < 16; t++) W[t] = M[i][t];\n    for (let t = 16; t < 64; t++)\n      W[t] =\n        (Sha256.σ1(W[t - 2]) + W[t - 7] + Sha256.σ0(W[t - 15]) + W[t - 16]) &\n        0xffffffff;\n    a = H[0];\n    b = H[1];\n    c = H[2];\n    d = H[3];\n    e = H[4];\n    f = H[5];\n    g = H[6];\n    h = H[7];\n    for (let t = 0; t < 64; t++) {\n      let T1 = h + Sha256.Σ1(e) + Sha256.Ch(e, f, g) + K[t] + W[t];\n      let T2 = Sha256.Σ0(a) + Sha256.Maj(a, b, c);\n      h = g;\n      g = f;\n      f = e;\n      e = (d + T1) & 0xffffffff;\n      d = c;\n      c = b;\n      b = a;\n      a = (T1 + T2) & 0xffffffff;\n    }\n    H[0] = (H[0] + a) & 0xffffffff;\n    H[1] = (H[1] + b) & 0xffffffff;\n    H[2] = (H[2] + c) & 0xffffffff;\n    H[3] = (H[3] + d) & 0xffffffff;\n    H[4] = (H[4] + e) & 0xffffffff;\n    H[5] = (H[5] + f) & 0xffffffff;\n    H[6] = (H[6] + g) & 0xffffffff;\n    H[7] = (H[7] + h) & 0xffffffff;\n  }\n  return (\n    Sha256.toHexStr(H[0]) +\n    Sha256.toHexStr(H[1]) +\n    Sha256.toHexStr(H[2]) +\n    Sha256.toHexStr(H[3]) +\n    Sha256.toHexStr(H[4]) +\n    Sha256.toHexStr(H[5]) +\n    Sha256.toHexStr(H[6]) +\n    Sha256.toHexStr(H[7])\n  );\n};\nSha256.ROTR = function (n, x) {\n  return (x >>> n) | (x << (32 - n));\n};\nSha256.Σ0 = function (x) {\n  return Sha256.ROTR(2, x) ^ Sha256.ROTR(13, x) ^ Sha256.ROTR(22, x);\n};\nSha256.Σ1 = function (x) {\n  return Sha256.ROTR(6, x) ^ Sha256.ROTR(11, x) ^ Sha256.ROTR(25, x);\n};\nSha256.σ0 = function (x) {\n  return Sha256.ROTR(7, x) ^ Sha256.ROTR(18, x) ^ (x >>> 3);\n};\nSha256.σ1 = function (x) {\n  return Sha256.ROTR(17, x) ^ Sha256.ROTR(19, x) ^ (x >>> 10);\n};\nSha256.Ch = function (x, y, z) {\n  return (x & y) ^ (~x & z);\n};\nSha256.Maj = function (x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n};\nSha256.toHexStr = function (n) {\n  let s = '',\n    v;\n  for (let i = 7; i >= 0; i--) {\n    v = (n >>> (i * 4)) & 0xf;\n    s += v.toString(16);\n  }\n  return s;\n};\n\nif (typeof String.prototype.utf8Encode == 'undefined') {\n  String.prototype.utf8Encode = function () {\n    return unescape(encodeURIComponent(this));\n  };\n}\nif (typeof String.prototype.utf8Decode == 'undefined') {\n  String.prototype.utf8Decode = function () {\n    try {\n      return decodeURIComponent(escape(this));\n    } catch (e) {\n      return this;\n    }\n  };\n}\n\n//A server can use such a secret key to generate secrete hash. This key is appended to the end of all user inputs.\nconst secretKey = 'tmwt74$2dfdia-uui937-loi*-ddh3!';\n\nconst hashingFunction = (values) => {\n  function joinData(data) {\n    let joinedString = '';\n    for (let i = 0; i < data.length; i++) {\n      joinedString = joinedString + data[i];\n    }\n    joinedString += secretKey;\n    console.log(joinedString);\n    return joinedString;\n  }\n\n  values.sort();\n  let value = joinData(values);\n  let hashValue = Sha256.hash(value);\n  return hashValue;\n};\n\nexport default hashingFunction;\n","import { useState } from 'react';\nimport SHA256Generator from '../../Algorithms/SHA256';\nimport styles from './HashGenerator.module.css';\n\nconst HashGenerator = (props) => {\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  const [hashedValue, setHashedValue] = useState();\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const hashedValue = SHA256Generator([value1, value2]);\n    setHashedValue(hashedValue);\n  };\n\n  const handleFormReset = (e) => {\n    e.preventDefault();\n    setHashedValue(null);\n    setValue1('');\n    setValue2('');\n  };\n\n  return (\n    <div className={styles.container}>\n      <form\n        onSubmit={handleFormSubmit}\n        onReset={handleFormReset}\n        className={styles.form}\n      >\n        <h2>SHA256 Hash Generator</h2>\n        <div className={styles.form__inputGroup}>\n          <label htmlFor='input1' className={styles.form__inputLabel}>\n            Input 1\n          </label>\n          <input\n            className={styles.form__input}\n            type='text'\n            key='input1'\n            value={value1}\n            onChange={(e) => setValue1(e.target.value)}\n          />\n        </div>\n\n        <div className={styles.form__inputGroup}>\n          <label htmlFor='input2' className={styles.form__inputLabel}>\n            Input 2\n          </label>\n          <textarea\n            className={`${styles.form__textarea} ${styles.form__input}`}\n            key='input2'\n            value={value2}\n            onChange={(e) => setValue2(e.target.value)}\n          />\n        </div>\n        <div className={styles.btns}>\n          <input type='submit' value='Submit' className={styles.btn} />\n          <input type='reset' value='Reset' className={styles.btn} />\n        </div>\n\n        <h3>Generated Hash</h3>\n        {hashedValue && <h4>{hashedValue}</h4>}\n      </form>\n    </div>\n  );\n};\n\nexport default HashGenerator;\n","import HashGenerator from './components/HashGenerator/HashGenerator';\n\nimport './App.css';\n\nconst App = (props) => {\n  return <HashGenerator />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}